#ifndef __rectangle_thread__
#define __rectangle_thread__

//==============================================================================
// Далее в других единицах компиляции могут быть описаны различные
// специализации, определяющие потоки. В примере только прямоугольник.
//==============================================================================

#include "ppp-thread.h"

//------------------------------------------------------------------------------
// Прямоугольник
typedef struct Rectangle{int x, y;} Rectangle;

//------------------------------------------------------------------------------
// Основа специализации. Прямоугольник, передаваемый потоку
// и формируемое значение результата (периметр)
typedef struct RectPerimeter {Rectangle r; double p;} RectPerimeter;

//------------------------------------------------------------------------------
// Специализация для потока
struct ThreadData + <RectPerimeter;>;

//------------------------------------------------------------------------------
// Прототипы функций, осуществляющих обработку прямоугольника

// Вывод результата вычислений периметра конкретно прямоугольника
void PrintRectPerimeter(RectPerimeter* rp, const char* str);

// Обработчик специализации, запускаемый в потоке
// вычисляет периметр прямоугольника.
void RunThread<ThreadData.RectPerimeter *rp>();

#endif // rectangle_thread