//==============================================================================
// animal.c - реализации поведения для отдельных животных и их обобщений
// Для простоты восприятия отсутствует разделение на эволюционно добавляемые
// единицы компиляции. Но проблем в этом нет.
//==============================================================================

#include <stdio.h>
#include <stdlib.h>
#include "animals.h"

//==============================================================================
// Методы реализующие поведение различных животных
//
// Не смотря на аргументы, они в данный момент не используются.
// Но это для упрощения. Для каждого животно возможны свои параметры,
// которые в общем случае могут передаваться
//==============================================================================

// Слон может издавать звуки
void Elephant::Speaking() {printf("Ду-ду\n");}
// Он топает при ходьбе
void Elephant::Moving() {printf("Топ-топ\n");}

// Собака может лаять
void Dog::Speaking() {printf("Гав-гав\n");}
// Она бегает
void Dog::Moving() {printf("Чап-чап по лужам босиком\n");}

// Пингвин может кричать, что описано в реализации
void Penguin::Speaking() {printf("Линукс рулит!\n");}
// Предположим, мы не знаем как он ходит, но знаем, что он ходит.
// Зато он плавает и ныряет, а другие здесь просто лохи
void Penguin::Swimming() {printf("Буль-буль\n");}

// Мы знаем как он перемещается.
void Worm::Moving() {printf("Ползу в полной темноте\n");}

//==============================================================================
// Обработчики специализаций для группы, включающей всех животных
//==============================================================================

// В ней пока представлено перемещение
void AnyAnimal::Moving() {
  // Обобщающая функция задает перемещение,
  // включая по умолчанию, когда не знаем способ
  printf("Я нечто. Как-то двигаюсь, но никто не знает как\n");
}
// Обработчик перемещения слона
void ElephantAsAnimal::Moving() {
  printf("Я есть слон. Я топаю: ");
  elephant->Moving();
}
// Обработчик перемещения собаки
void DogAsAnimal::Moving() {
  printf("Я собака я бегу: ");
  dog->Moving();
}
// Обработчик перемещения червя
void WormAsAnimal::Moving() {
  printf("Я червяк. Живу в чьем-то желудке: ");
  worm->Moving();
}

//==============================================================================
// Обработчики специализаций для группы, включающей пловцов
//==============================================================================

// Определяется только пингвин. Других нет
void PenguinAsSwimmingAnimal::Swimming() {
  printf("Я пингвин. Я нырнул за рыбкой: ");
  penguin->Swimming();
}

//==============================================================================
// Обработчики специализаций для группы, издающих звуки
//==============================================================================

// В ней пока представлено перемещение
void SpeakingAnimal::Speaking() {
  // Обобщающая функция задает звучание по умолчанию, когда не знаем способ
  printf("Я нечто. Но я пою как никто. Кто я?\n");
}
// Обработчик звучания слона
void ElephantAsSpeakingAnimal::Speaking() {
  printf("Я слон. Я иду и пою: ");
  elephant->Speaking();
}
// Обработчик звучани собаки
void DogAsSpeakingAnimal::Speaking() {
  printf("Караул! Воры лезут!: ");
  dog->Speaking();
}
// Обработчик звучания пингвина
void PenguinAsSpeakingAnimal::Speaking() {
  printf("Винда маст дай! ");
  penguin->Speaking();
}
