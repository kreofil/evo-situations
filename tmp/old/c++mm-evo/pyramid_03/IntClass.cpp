//------------------------------------------------------------------------------
// ‘айл IntClass.cpp - определ€ет методы класса, задающего целое число.
//------------------------------------------------------------------------------

#include <iostream>
using namespace std;

#include "IntClass.h"

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ¬ычитание из "мен€" второго числа. ¬торое число €вл€етс€ аргументом
Number* Int::SubtractDirect(Number& num2)
{
  // ѕри первом целочисленном аргументе нет проблем выйти на метод
  // ќпредел€ющий вычиатание второго аргумента в пирамидальной иерархии.
  IntFace* i_num = static_cast<IntFace*>(&num2);
  return i_num->SubtFromFirstInt(_value);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ¬ычитание "мен€" из первого числа. ѕервое число €вл€етс€ аргументом
Number* Int::SubtractReverse(Number& num1)
{
  IntFace* i_num = static_cast<IntFace*>(&num1);
  return i_num->SubtInt(_value);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ¬ывод значени€ числа в стандартный поток
void Int::StdOut()
{
  cout << "It is Int. Value = " << _value << endl;
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ƒалее идут методы своего интерфейсного класса
// и, следовательно, переопредел€емые.

// ¬ычитание второго операнда из первого, целочисленного, аргумента
// ѕродолжатель диспетчеризации, начатой SubtractDirect
Number* Int::SubtFromFirstInt(int v)
{
  // ѕервый аргумент передаетс€, а второй находитс€ внутри
  return new Int(v - _value);
}

// ¬ычитание из первого операнда целочисленного, аргумента
// ѕродолжатель диспетчеризации, начатой SubtractReverse
// ѕримечание. ƒанный метод недостижим!!!!
Number* Int::SubtInt(int v)
{
  // ѕервый аргумент передаетс€, а второй находитс€ внутри
  return new Int(_value - v);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
//  онструктор, обеспечивающий инициализацию числа.
Int::Int(int v): _value(v)
{_rank = 0;}
