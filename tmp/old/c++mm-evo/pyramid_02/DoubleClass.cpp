//------------------------------------------------------------------------------
// ‘айл DoubleClass.cpp - определ€ет методы класса, 
// задающего действительное число.
//------------------------------------------------------------------------------

#include <iostream>
using namespace std;

#include "IntClass.h"
#include "DoubleClass.h"

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ¬ычитание первого числа из второго. ѕервое число - сам класс
// ¬торое число €вл€етс€ аргументом
Number* Double::Subtract(Number& num2)
{
  // ¬ начале надо отсечь верхние классы, не "знающие" о существовании нижних.
    if(Int* pInt = dynamic_cast<Int*>(&num2))
  {
    // ¬торой аргумент - целое число. ѕроисходит непосредственное его 
    // вычитание из первого после RTTI.
    return new Double(_value - pInt->GetValue()); 
  }
  else
  {
    // ¬ызываетс€ виртуальный метод, осуществл€ющий 
    // обработку второго аргумента.
    DoubleFace* d_num = static_cast<DoubleFace*>(&num2);
    return d_num->SubtFromFirstDouble(_value);
  }
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ¬ывод значени€ числа в стандартный поток
void Double::StdOut()
{
  cout << "It is Double. Value = " << _value << endl;
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ѕереопределение методов вышесто€ших пирамидальных классов

// ¬ычитание второго операнда из первого, целочисленного, аргумента
Number* Double::SubtFromFirstInt(int v)
{
  // ѕервый аргумент передаетс€, а второй находитс€ внутри
  return new Double(v - _value);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// ƒалее идут методы своего интерфейсного класса
// и, следовательно, переопредел€емые.

// ¬ычитание второго операнда из первого, действительного, аргумента
Number* Double::SubtFromFirstDouble(double v)
{
  // ѕервый аргумент передаетс€, а второй находитс€ внутри
  return new Double(v - _value);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
//  онструктор, обеспечивающий инициализацию числа.
Double::Double(double v): _value(v)
{}
