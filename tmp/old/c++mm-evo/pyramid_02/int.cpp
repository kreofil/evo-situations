//------------------------------------------------------------------------------
// Файл IntClass.cpp - определяет методы класса, задающего целое число.
//------------------------------------------------------------------------------

#include <iostream>
using namespace std;

#include "int.h"

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Вычитание первого числа из второго. Первое число - сам класс
// Второе число является аргументом
//Number* Int::Subtract(Number* num2)
Number* Int::Subtract(Number& num2)
{
  // При первом целочисленном аргументе нет проблем выйти на метод
  // Определяющий вычиатание второго аргумента в пирамидальной иерархии.
  //return static_cast<IntFace*>(num2)->SubtFromFirstInt(_value);
  IntFace* i_num = static_cast<IntFace*>(&num2);
  return i_num->SubtFromFirstInt(_value);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Вывод значения числа в стандартный поток
void Int::StdOut()
{
  cout << "It is Int. Value = " << _value << endl;
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Далее идут методы своего интерфейсного класса
// и, следовательно, переопределяемые.

// Вычитание второго операнда из первого, целочисленного, аргумента
Number* Int::SubtFromFirstInt(int v)
{
  // Первый аргумент передается, а второй находится внутри
  return new Int(v - _value);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Конструктор, обеспечивающий инициализацию числа.
Int::Int(int v): _value(v)
{}
