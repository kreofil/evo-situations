(*******************************************************************************
| rectangle.o: содержит модуль rectangle с процедурами и типами, 
| осуществляющими обработку прямоугольников
*******************************************************************************)

MODULE rectangle; 
IMPORT In, Out, FileIO, figure;

(******************************************************************************)
TYPE  
  (* Структуры данных описывающие прямоугольник *)

  (* Указатель на прямоугольник *)
  Prect* = POINTER TO rect;

  (* Запись, определяющая структуру прямоугольника *)
  rect* = RECORD(figure.fig)
    x*, y* : INTEGER (* стороны прямоугольника*)
  END;               

(******************************************************************************)
(* Процедура динамического создания и инициализации нового прямоугольника *)
PROCEDURE New*(x, y: INTEGER): Prect;
VAR tmp : Prect;
BEGIN     
    NEW(tmp);            
    tmp^.x := x;
    tmp^.y := y;      
    RETURN tmp
END New; 

(******************************************************************************)
(* Процедура инициализации уже существующего прямоугольника *)
PROCEDURE Init*(VAR r: rect; x, y: INTEGER);
BEGIN     
    r.x := x;
    r.y := y;      
END Init; 

(******************************************************************************)
(* Процедура вычисления периметра прямоугольника *)
PROCEDURE Perimeter*(VAR r: rect) : REAL;
VAR
BEGIN          
  RETURN (r.x + r.y) * 2
END Perimeter;

(******************************************************************************)
(* Процедура Заполнения прямоугольника из входного потока *)
(******************************************************************************)
PROCEDURE Input*(VAR r: rect);
BEGIN     
  Out.String("x = "); In.Int(r.x); 
  Out.String("y = "); In.Int(r.y); 
END Input; 

(******************************************************************************)
(* Процедура вывода, использующая передачу параметра-переменной *)
PROCEDURE Output*(VAR r: rect);
BEGIN          
  Out.String("Rectangle: x = "); Out.Int(r.x, 0); 
  Out.String(", y = "); Out.Int(r.y, 0); 
  Out.String(",   perimemter = "); Out.Real(Perimeter(r), 0); 
END Output;

(******************************************************************************)
(* Процедура Заполнения прямоугольника из файла *)
(******************************************************************************)
PROCEDURE FileInput*(VAR inFile : FileIO.TFile; VAR r: rect);
VAR
  f : INTEGER;
BEGIN     
  f := inFile.ReadInt(r.x); 
  f := inFile.ReadInt(r.y); 
END FileInput; 

(******************************************************************************)
(* Процедура вывода в файл, использующая передачу параметра-переменной *)
PROCEDURE FileOutput*(VAR outFile : FileIO.TFile; VAR r: rect);
VAR 
  flag : INTEGER;
BEGIN     
  flag := outFile.WriteString("Rectangle: x = "); 
  flag := outFile.WriteInt(r.x, 7); 
  flag := outFile.WriteString(", y = "); 
  flag := outFile.WriteInt(r.y, 7); 
  flag := outFile.WriteString(",   perimemter = "); 
  flag := outFile.WriteReal(Perimeter(r), 7); 
END FileOutput;

(******************************************************************************)
END rectangle.
