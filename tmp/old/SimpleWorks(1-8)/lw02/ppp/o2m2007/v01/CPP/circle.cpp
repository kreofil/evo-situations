/////////////////////////////////////////////
// This file was generated by O2M compiler //
/////////////////////////////////////////////

//MODULE circle;
#include "circle.h"
using namespace circle;

//IMPORT
//In
//Out
//FileIO
//figure

//VAR
namespace {double PI = 3.14159;}

/////////////////////////////////////////////
//PROCEDURE New
Pcirc* circle::New(int r) {
	Pcirc* O2M_RESULT;
//VAR
Pcirc* tmp;
//BEGIN
	tmp = new(Pcirc);
	tmp->r = r;
	O2M_RESULT = tmp;
	goto O2M_RETURN;
	O2M_RETURN:;
	return O2M_RESULT;
}
//END New;

/////////////////////////////////////////////
//PROCEDURE Init
void circle::Init(circ* c, int r) {
//VAR
//BEGIN
	c->r = r;
}
//END Init;

/////////////////////////////////////////////
//PROCEDURE Perimeter
double circle::Perimeter(circ* c) {
	double O2M_RESULT;
//VAR
//BEGIN
	O2M_RESULT = ((2 * PI) * c->r);
	goto O2M_RETURN;
	O2M_RETURN:;
	return O2M_RESULT;
}
//END Perimeter;

/////////////////////////////////////////////
//PROCEDURE Input
void circle::Input(circ* c) {
//VAR
//BEGIN
	Out::String((char*)"r = ", 5);
	In::Int(c->r);
}
//END Input;

/////////////////////////////////////////////
//PROCEDURE Output
void circle::Output(circ* c) {
//VAR
//BEGIN
	Out::String((char*)"Circle: r = ", 13);
	Out::Int(c->r, 0);
	Out::String((char*)",   perimemter = ", 18);
	Out::Real(Perimeter(c), 0);
	Out::Ln();
}
//END Output;

/////////////////////////////////////////////
//PROCEDURE FileInput
void circle::FileInput(FileIO::TFile* inFile, circ* c) {
//VAR
int f;
//BEGIN
	f = inFile->ReadInt(c->r);
}
//END FileInput;

/////////////////////////////////////////////
//PROCEDURE FileOutput
void circle::FileOutput(FileIO::TFile* outFile, circ* c) {
//VAR
int flag;
//BEGIN
	flag = outFile->WriteString((char*)"Circle: r = ", 13);
	flag = outFile->WriteInt(c->r, 7);
	flag = outFile->WriteString((char*)",   perimemter = ", 18);
	flag = outFile->WriteReal(Perimeter(c), 7);
	flag = outFile->Ln();
}
//END FileOutput;

/////////////////////////////////////////////
//MODULE INITIALIZATION
void circle::O2M_SYS_circle() {
	//imports initialisation
	static bool O2M_SYS_was_started(false);
	if (O2M_SYS_was_started) return;
	O2M_SYS_was_started = true;
	In::O2M_SYS_In();
	Out::O2M_SYS_Out();
	FileIO::O2M_SYS_FileIO();
	figure::O2M_SYS_figure();
//BEGIN
}
//END circle.
