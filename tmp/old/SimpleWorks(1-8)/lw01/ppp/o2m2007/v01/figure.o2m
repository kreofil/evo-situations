(*******************************************************************************
| figure.o: содержит модуль figure с процедурами и типами, 
| осуществляющими обработку обобщенных геометрических фигур
*******************************************************************************)

MODULE figure; 
IMPORT In, Out, FileIO, rectangle, triangle; 

(******************************************************************************)
TYPE  
  (* Структуры данных описывающие обобщенную геометрическую фигуру *)

  (* Указатель на обобщенную геометрическую фигуру *)
  Pfig* = POINTER TO fig;

  (* Обобщение по типу определяющее структуру геометрической фигуры *)
  fig* = CASE TYPE OF
      rectangle.rect | triangle.trian
  END;               

(*
!!! 040806 - Неправильно генерируется dfn для этого указателя (потеряно, на что указывает)
  PfigRect* = POINTER TO fig<rectangle.rect>;                                            
*)

(******************************************************************************)
(* Процедура, вычисляющая переметр обобщенной фигуры *)
PROCEDURE Perimeter*{VAR f: fig}() : REAL := 0;

(*----------------------------------------------------------------------------*)
(* Обработчик специализации для прямоугольника *)
PROCEDURE Perimeter{VAR r: fig<rectangle.rect>}() : REAL;     
BEGIN 
  RETURN rectangle.Perimeter(r)     
END Perimeter;

(*----------------------------------------------------------------------------*)
(* Обрабоотчик специализации для прямоугольника *)
PROCEDURE Perimeter{VAR t: fig<triangle.trian>}() : REAL;     
BEGIN 
  RETURN triangle.Perimeter(t)     
END Perimeter;

(******************************************************************************)
(* Процедура, осуществляющая вывод обобщенной фигуры *)
PROCEDURE Output*{VAR f: fig} := 0;

(*----------------------------------------------------------------------------*)
(* Обработчик специализации для прямоугольника *)
PROCEDURE Output{VAR r: fig<rectangle.rect>};     
BEGIN 
  rectangle.Output(r)     
END Output;

(*----------------------------------------------------------------------------*)
(* Обрабоотчик специализации для прямоугольника *)
PROCEDURE Output{VAR t: fig<triangle.trian>};     
BEGIN 
  triangle.Output(t)     
END Output;

(******************************************************************************)
(* Процедура вывода в файл, использующая передачу параметра-переменной *)
PROCEDURE FileOutput*{VAR f: fig}(VAR outFile : FileIO.TFile) := 0;

(*----------------------------------------------------------------------------*)
(* Обработчик специализации для прямоугольника *)
PROCEDURE FileOutput{VAR r: fig<rectangle.rect>}(VAR outFile : FileIO.TFile);     
BEGIN 
  rectangle.FileOutput(outFile, r)     
END FileOutput;

(*----------------------------------------------------------------------------*)
(* Обрабоотчик специализации для прямоугольника *)
PROCEDURE FileOutput{VAR t: fig<triangle.trian>}(VAR outFile : FileIO.TFile);     
BEGIN 
  triangle.FileOutput(outFile, t)    
END FileOutput;

END figure.
