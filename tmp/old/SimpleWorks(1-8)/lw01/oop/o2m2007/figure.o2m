(*******************************************************************************
| figure.o: содержит модуль figure с процедурами и типами, 
| осуществл€ющими обработку обобщенных геометрических фигур
*******************************************************************************)

MODULE figure; 
IMPORT Out, FileIO;

(******************************************************************************)
TYPE  
  (* —труктуры данных описывающие обобщенную геометрическую фигуру *)

  (* ”казатель на обобщенную геометрическую фигуру *)
  Pfig* = POINTER TO fig;

  (* «апись, определ€юща€ структуру обобщенной геометрической фигуры *)
  fig* = RECORD
    (* запись €вл€етс€ базовой дл€ всех прочих *)
    (* пол€ отсутствуют *)
  END;               

(******************************************************************************)
(* ѕроцедура, вычисл€юща€ переметр обобщенной фигуры *)
PROCEDURE (VAR f: fig) Perimeter* (): REAL;     
BEGIN 
  RETURN 0
END Perimeter;

(******************************************************************************)
(* ѕроцедура, осуществл€юща€ вывод обобщенной фигуры *)

PROCEDURE (VAR f: fig) Output*;
BEGIN 
  Out.String("Invalid figure"); Out.Ln
END Output;

(******************************************************************************)
(* ѕроцедура вывода обобщенной фигуры в файл *)
PROCEDURE (VAR f: fig) FileOutput*(VAR outFile : FileIO.TFile);
VAR 
  flag : INTEGER;
BEGIN     
    flag := outFile.WriteString("Invalid figure");
    flag := outFile.Ln();
END FileOutput;

END figure.
